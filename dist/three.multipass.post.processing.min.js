class MultiPostFX{constructor(e){if(this.renderer=e.renderer,!this.renderer)return;this.dummyCamera=new THREE.OrthographicCamera,this.geometry=new THREE.BufferGeometry;const s=new Float32Array([-1,-1,3,-1,-1,3]);this.geometry.setAttribute("position",new THREE.BufferAttribute(s,2)),this.resolution=new THREE.Vector2,this.renderer.getDrawingBufferSize(this.resolution),this.defaultVertexShader="precision highp float;attribute vec2 position;void main(){gl_Position=vec4(position,1.,1.);}",this.defaultFragmentShader="precision highp float;uniform sampler2D uScene;uniform vec2 uResolution;void main(){vec2 uv=gl_FragCoord.xy/uResolution.xy;gl_FragColor=texture2D(uScene,uv);}",this.nbPasses=0,this.passes={},e.passes=e.passes||{};for(let s in e.passes)this.addPass(s,e.passes[s])}addPass(e,s){let t={scene:new THREE.Scene,target:new THREE.WebGLRenderTarget(this.resolution.x,this.resolution.y,{format:s.format||THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!0})},r={uScene:{value:t.target.texture},uResolution:{value:this.resolution}};s.uniforms&&(r=Object.assign(r,s.uniforms)),t.material=new THREE.RawShaderMaterial({fragmentShader:s.fragmentShader||this.defaultFragmentShader,vertexShader:s.vertexShader||this.defaultVertexShader,uniforms:r}),t.mesh=new THREE.Mesh(this.geometry,t.material),t.mesh.frustumCulled=!1,t.scene.add(t.mesh),this.passes[e]=t,this.nbPasses++}resize(){this.renderer.getDrawingBufferSize(this.resolution);const e=Object.keys(this.passes);for(let s=0;s<this.nbPasses;s++)this.passes[e[s]].target.setSize(this.resolution.x,this.resolution.y),this.passes[e[s]].material.uniforms.uResolution.value=this.resolution}render(e,s){if(0===this.nbPasses)this.renderer.render(e,s);else{const t=Object.keys(this.passes);this.renderer.setRenderTarget(this.passes[t[0]].target),this.renderer.render(e,s);for(let e=1;e<this.nbPasses;e++)this.renderer.setRenderTarget(this.passes[t[e]].target),this.renderer.render(this.passes[t[e-1]].scene,this.dummyCamera);this.renderer.setRenderTarget(null),this.renderer.render(this.passes[t[this.nbPasses-1]].scene,this.dummyCamera)}}}